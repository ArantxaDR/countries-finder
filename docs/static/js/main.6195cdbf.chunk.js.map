{"version":3,"sources":["common/services/CountriesService.tsx","common/services/LocalStorageService.tsx","components/Filters/Filters.tsx","components/Header/Header.tsx","assets/lupa.svg","components/Loading/Loading.tsx","components/Countries/Card/CountriesCard.tsx","components/Countries/List/CountriesList.tsx","components/Countries/Details/CountryDetail.tsx","components/Footer/Footer.tsx","components/Favs/FavCountries.tsx","components/App/App.tsx","index.tsx"],"names":["countriesService","apiUrl","this","axios","get","result","countries","data","map","item","name","alpha2Code","flag","population","capital","region","subregion","area","currencies","languages","countryName","key","defaultData","JSON","parse","localStorage","getItem","setItem","stringify","Filters","props","refName","React","createRef","refLanguage","refRegion","className","htmlFor","type","id","placeholder","ref","value","onClick","ev","preventDefault","handleFilters","current","Header","Loading","src","logoLoading","alt","title","CountriesCard","useState","favoritIconColor","setFavoritIconColor","country","useEffect","ls","filter","favoritCountry","length","addCountryToFavorits","favoritCountries","push","setFavs","removeCountryFromFavorits","newFavoritCountries","find","undefined","style","color","to","CountriesList","countriesList","isLoading","CountryDetail","size","Footer","FavCountries","favs","App","setCountries","countriesFiltered","setCountriesFiltered","nameFilter","setNameFilter","regionFilter","setRegionFilter","languageFilter","setLanguageFilter","setIsLoading","getAllCountries","then","getCountriesByName","filterByRegionLanguage","countriesToShow","countriesByRegion","countriesByLanguage","some","language","iso639_1","saveLastSeach","lastSearch","searchHistory","exact","path","render","match","params","findCountry","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6195cdbf.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport {ICountry} from '../interfaces/ICountry';\r\n\r\nclass CountriesService {\r\n    private apiUrl: string;\r\n    \r\n    constructor() {\r\n        this.apiUrl = 'https://restcountries.eu/rest/v2/';    \r\n    }\r\n    \r\n    public async getAllCountries(): Promise<ICountry[]>{        \r\n        let result: AxiosResponse= await axios.get(this.apiUrl + `all`);\r\n        let countries : ICountry[];\r\n        countries = result.data.map((item : ICountry)=> {\r\n            const country :ICountry = {\r\n                name: item.name,\r\n                alpha2Code: item.alpha2Code,\r\n                flag: item.flag,\r\n                population: item.population,\r\n                capital: item.capital,\r\n                region: item.region,\r\n                subregion: item.subregion,\r\n                area: item.area,\r\n                currencies : item.currencies,\r\n                languages: item.languages\r\n            }\r\n            return country;            \r\n        })        \r\n        //return result.data;    \r\n        return countries;\r\n    }\r\n\r\n    public async getCountriesByName(countryName : string): Promise<ICountry[]>{       \r\n        let result: AxiosResponse = await axios.get(this.apiUrl + 'name/' + countryName);\r\n        let countries : ICountry[];\r\n        countries = result.data.map((item : ICountry)=> {\r\n            const country :ICountry = {\r\n                name: item.name,\r\n                alpha2Code: item.alpha2Code,\r\n                flag: item.flag,\r\n                population: item.population,\r\n                capital: item.capital,\r\n                region: item.region,\r\n                subregion: item.subregion,\r\n                area: item.area,\r\n                currencies : item.currencies,\r\n                languages: item.languages\r\n            }\r\n            return country;            \r\n        })        \r\n        //return result.data;    \r\n        return countries;\r\n    }\r\n}\r\nexport const countriesService = new CountriesService();","/* eslint-disable import/no-anonymous-default-export */\r\nconst get = (key : string, defaultData : any) => {\r\n    const data = JSON.parse(localStorage.getItem(key)!);\r\n    return data === null ? defaultData : data;\r\n  };\r\n  \r\n  const set = (key : string, data : any) => {\r\n    //localStorage.removeItem(key);\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  };\r\n  \r\n  export default {\r\n    get: get,\r\n    set: set\r\n  };\r\n  ","import React from 'react';\r\nimport './_filters.scss';\r\n\r\nexport default function Filters(props:any) {\r\n\r\n\tlet refName = React.createRef<HTMLInputElement>();\r\n\tlet refLanguage = React.createRef<HTMLInputElement>();\r\n\tlet refRegion = React.createRef<HTMLSelectElement>();\r\n\r\n\tconst handleSubmit = (ev:any) => {\r\n\t\tev.preventDefault();\r\n\t\t\r\n\t\tprops.handleFilters({ value: refName.current?.value, key: refName.current?.id });\r\n\t\tprops.handleFilters({ value: refLanguage.current?.value, key: refLanguage.current?.id });\r\n\t\tprops.handleFilters({ value: refRegion.current?.value, key: refRegion.current?.id });\r\n\t  };\r\n\treturn (\r\n\t\t<section className=\"wrapper\">\r\n\t\t\t<form className=\"form\">\r\n\t\t\t\t<label htmlFor=\"name\" className=\"form__label\">Country name</label>\r\n\t\t\t\t<input type=\"text\" className=\"form__input\" id=\"name\" placeholder='Find country by name' name=\"name\" ref={refName}/>\r\n\r\n\t\t\t\t<label htmlFor=\"region\" className=\"form__label\">Region</label>\r\n\t\t\t\t<select name=\"region\" id=\"region\" className=\"form__input\" ref={refRegion}>\r\n\t\t\t\t\t<option value=\"All\">All</option>\r\n          \t\t\t<option value=\"Africa\">Africa</option>\r\n          \t\t\t<option value=\"Americas\">Americas</option>\r\n\t\t\t\t\t<option value=\"Asia\">Asia</option>\r\n\t\t\t\t\t<option value=\"Europe\">Europe</option>\r\n\t\t\t\t\t<option value=\"Oceania\">Oceania</option>\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<label htmlFor=\"language\" className=\"form__label\">Language</label>\r\n\t\t\t\t<input type=\"text\" className=\"form__input\" id=\"language\" placeholder=\"E.g japanese\" name=\"language\" ref={refLanguage}/>\r\n\r\n\t\t\t\t<button className=\"form__btn\" onClick={handleSubmit}>Search<i className=\"material-icons\" >search</i></button>\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Filters from '../Filters/Filters'\r\n\r\nexport default function Header(props:any) {\r\n\r\n\treturn (\r\n\t\t<header className=\"App__header\">\r\n       \r\n       <h1 className=\"App__header-title\">Countries finder</h1>\r\n\t   <Filters handleFilters={props.handleFilters}/> \r\n        \r\n      </header>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/lupa.c1fba803.svg\";","import React from 'react'\r\nimport logoLoading from '../../assets/lupa.svg';\r\nimport './_loading.scss';\r\n\r\nexport default function Loading() {\r\n\treturn (\r\n\t\t<div className=\"loading__container\">\r\n      <img\r\n        className=\"loading__container-image\"\r\n        src={logoLoading}\r\n        alt=\"loading\"\r\n        title=\"loading\"\r\n      />\r\n      <p className=\"loading__container-text\">Loading...</p>\r\n    </div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ICountry } from '../../../common/interfaces/ICountry';\r\nimport ls from '../../../common/services/LocalStorageService';\r\nimport './_countriesCard.scss';\r\n\r\nexport default function CountriesCard(props:any) {\r\n\tconst [favoritIconColor, setFavoritIconColor] = useState<string>(\"black\");\r\n\t\r\n\tconst country : ICountry = props.country;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet  favoritCountries : ICountry[] = ls.get(\"favoritCountries\", []);\r\n\t\tconst favoritCountry = favoritCountries.filter(favoritCountry  => favoritCountry.alpha2Code === country.alpha2Code);\t\r\n\t\tif (favoritCountry.length > 0)\r\n\t\t{\r\n\t\t\tsetFavoritIconColor(\"yellow\");\t\t\t\r\n\t\t}\t\t\t\r\n\t  }, [country.alpha2Code]);\r\n\r\n\t\r\n\tconst favoritClickHandler = (ev:any) => {\r\n\t\tev.preventDefault();\r\n\t\tlet  favoritCountries : ICountry[] = ls.get(\"favoritCountries\", []);\r\n\t\r\n\t\t let favoritCountry : ICountry | undefined ;\r\n\t\t \r\n\t\t if (favoritCountries.length > 0)\r\n\t\t {\r\n\t\t\tfavoritCountry = favoritCountries.find(favoritCountry  => favoritCountry.alpha2Code === country.alpha2Code);\t\t\t\r\n\t\t }\r\n\t\t\r\n\t\tif(favoritCountry === undefined){\t\t\t\r\n\t\t\taddCountryToFavorits(favoritCountries);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tremoveCountryFromFavorits(favoritCountries);\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst addCountryToFavorits = (favoritCountries : ICountry[]) => {\t\t\t\r\n\t\tfavoritCountries.push(country);\t\t\r\n\t\tls.set(\"favoritCountries\", favoritCountries);\r\n\t\tsetFavoritIconColor(\"yellow\");\r\n\t\tprops.setFavs(favoritCountries);\r\n\t}\r\n\r\n\tconst removeCountryFromFavorits = (favoritCountries : ICountry[]) => {\t\t\r\n\t\tconst newFavoritCountries : ICountry[]  = favoritCountries.filter(favoritCountry  => favoritCountry.alpha2Code !== country.alpha2Code);\r\n\t\tls.set(\"favoritCountries\", newFavoritCountries);\r\n\t\tsetFavoritIconColor(\"black\");\r\n\t\tprops.setFavs(newFavoritCountries);\r\n\t}\r\n\r\n\t\r\n\treturn (\r\n\t<div className=\"card\">\r\n\t\t<img src={country.flag} \r\n\t\talt={`${country.name} flag`} \r\n\t\ttitle={`${country.name} flag`} \r\n\t\tclassName=\"card__img\"\r\n\t\t/>\r\n\t\t<p className=\"card__content\">{country.name}</p>\r\n\t\t<div className=\"card__info\">\r\n\t\t\t<button className=\"card__info-btn\" onClick={favoritClickHandler}><i className=\"material-icons\" style={{color: favoritIconColor}} >star</i></button>\t\t\t\r\n\t\t\t<Link to={`/countries/${country.name}`} className=\"card__info-link\">View More</Link>\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ICountry } from '../../../common/interfaces/ICountry';\r\nimport Loading from '../../Loading/Loading';\r\nimport CountriesCard from '../Card/CountriesCard';\r\nimport './_countriesList.scss';\r\n\r\n\r\n\r\nexport default function CountriesList(props:any) {\r\n\r\n\tconst countries : ICountry[] = props.countries;\r\n\r\n\tlet countriesList  = countries?.map((country:ICountry) =>{\t\t\r\n\t\treturn <CountriesCard key={country.alpha2Code} country={country} setFavs={props.setFavs} />\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<Link to=\"/favcountries\"><h3 className=\"fav__link\">See favorites countries</h3></Link>\r\n\t\t {props.isLoading === true ? (\r\n              <Loading />\r\n            ) : (\r\n\t\t\t\t<>\r\n\t\t\t\t<section className=\"cards\">\r\n\t\t\t\t{countriesList}\r\n\t\t\t</section>\r\n\t\t\t</>\r\n\t\r\n            )}\r\n\r\n\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n  ","\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport { ICountry } from '../../../common/interfaces/ICountry';\r\nimport './_countryDetail.scss';\r\n\r\nexport default function CountryDetail (props:any) {\r\n\t\r\n\tif (props.country === undefined) {\r\n\t\treturn <h1>Ups! Wrong path</h1>;\r\n\t}\r\n\r\n\tconst country : ICountry =props.country;\r\n\t\r\n\tconst data =\r\n\t[\r\n     { country: country.alpha2Code, value: country.population}\r\n\t]\r\n\t\r\n\t\r\n\treturn (\r\n\t\t\r\n\t<section className=\"details__wrapper\">\r\n        <Link to=\"/\" className=\"home_link\" title=\"Home\">\r\n          <button className=\"home\">Home <i className=\"material-icons\" >home</i></button>\r\n        </Link>\r\n        <article className=\"detail__container\">\r\n\t\t\t<img\r\n\t\t\tclassName=\"detail__img\"\r\n\t\t\tsrc={country.flag} \r\n\t\t\talt={`${country.name} flag`} \r\n\t\t\ttitle={`${country.name} flag`}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<div className=\"country__details\">\r\n\t\t\t\t<div className=\"country__details-text\">\r\n\t\t\t\t\t<h2 className=\"country__details-text__title\">{country.name}</h2>\r\n\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Capital: <span>{country.capital}</span></h5> \r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Region: <span>{country.region}</span></h5>\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Sub Region: <span>{country.subregion}</span></h5>\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Population: <span>{country.population}</span></h5>\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Area: <span>{country.area}</span></h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"country__details-text\">\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Currencies: <span>{country.currencies[0].name}</span></h5>\r\n\t\t\t\t\t<h5 className=\"country__details-text__subtitle\">Language: <span>{country.languages[0].name}</span></h5>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>         \r\n            <WorldMap color= \"darkred\" value-suffix=\"people\" size=\"responsive\" data={data}/>\r\n        </article>\r\n\t\t\r\n\t</section>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './_footer.scss'\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t<div className=\"footer\">\r\n\t\t<p className=\"footer__text\">\r\n\t\tMade with \r\n\t\t<span className=\"material-icons footer_icon\">\r\n\t\ttravel_explore</span>  \r\n\t\tby ArantxaDR &copy; 2021\r\n\t\t</p>\r\n\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ICountry } from '../../common/interfaces/ICountry';\r\nimport CountriesCard from '../Countries/Card/CountriesCard';\r\nimport './_favCountries.scss';\r\n\r\n\r\nexport default function FavCountries(props:any) {\r\n\t\r\n\tconst favs : ICountry[] = props.favs;\r\n\t\r\n\tlet countriesList = favs.map((country:ICountry) =>{\t\t\r\n\t\treturn <CountriesCard key={country.alpha2Code} country={country} setFavs={props.setFavs} />\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<Link to=\"/\" className=\"home_link\" title=\"Home\">\r\n          <button className=\"home  fav\">Home <i className=\"material-icons\" >home</i></button>\r\n        </Link>\r\n\t\t<section className=\"cards\">\r\n\t\t\t{countriesList}\r\n\t\t</section>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useEffect, useState }from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { countriesService } from '../../common/services/CountriesService';\r\nimport { ICountry, ILanguages } from '../../common/interfaces/ICountry';\r\nimport { IFilter } from '../../common/interfaces/IFilter';\r\nimport ls from '../../common/services/LocalStorageService';\r\nimport Header from '../Header/Header';\r\nimport CountriesList from '../Countries/List/CountriesList';\r\nimport CountryDetail from '../Countries/Details/CountryDetail';\r\nimport Footer from '../Footer/Footer';\r\nimport FavCountries from '../Favs/FavCountries';\r\nimport './App.scss';\r\nimport { ISearch } from '../../common/interfaces/ISearch';\r\n\r\n\r\nfunction App() {\r\n\r\n   const [countries, setCountries] = useState<ICountry[]>(); \r\n   const [countriesFiltered, setCountriesFiltered] = useState<ICountry[]>(); \r\n   const [favs, setFavs] = useState<ICountry[]>([]);\r\n   const [nameFilter, setNameFilter] = useState<string>();\r\n   const [regionFilter, setRegionFilter] = useState<string>();\r\n   const [languageFilter, setLanguageFilter] = useState<string>();\r\n   const [isLoading, setIsLoading] = useState(false);   \r\n      \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    countriesService.getAllCountries().then((data) => {\r\n      setCountries(data);\r\n      setCountriesFiltered(data);   \r\n      setIsLoading(false);         \r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\t\tconst  favoritCountries : ICountry[] = ls.get(\"favoritCountries\", []);\r\n    setFavs(favoritCountries);\t    \t\t\r\n\t\t}, []);\r\n\r\n  useEffect(() => {\r\n    \r\n    setIsLoading(true);\r\n    let countriesToShow: ICountry[];\r\n\r\n    if(nameFilter !== \"\" && nameFilter !== undefined){\r\n      countriesService.getCountriesByName(nameFilter).then((data) =>{\r\n\r\n      countriesToShow = data;\r\n      \r\n      filterByRegionLanguage(countriesToShow);\r\n      });\r\n    } else {\r\n      if(countries !== undefined)\r\n      filterByRegionLanguage(countries);\r\n\r\n    }\r\n      \r\n  }, [countries,nameFilter,regionFilter,languageFilter]);\r\n  \r\n\r\n  const filterByRegionLanguage = (countriesToShow : ICountry[]) => {\r\n\r\n    if(regionFilter !== \"All\" && regionFilter !== undefined){\r\n      let countriesByRegion : ICountry[] = countriesToShow.filter(\r\n        country => country.region === regionFilter);\r\n        countriesToShow = countriesByRegion;\r\n    }\r\n\r\n    if(languageFilter !== \"\" && languageFilter !== undefined){     \r\n      let countriesByLanguage = countriesToShow.filter((country: { languages: ILanguages[]; }) => country.languages.some((language: { iso639_1: string; }) => language.iso639_1 === languageFilter));\r\n      countriesToShow = countriesByLanguage;\r\n    }\r\n\r\n    setCountriesFiltered(countriesToShow);\r\n    saveLastSeach();\r\n    setIsLoading(false);    \r\n  };\r\n\r\n  const handleFilters = (filter:IFilter) => {\r\n    if (filter.key === \"name\") {\r\n      setNameFilter(filter.value);\r\n    } else if (filter.key === \"region\") {\r\n      setRegionFilter(filter.value);\r\n    } else if (filter.key === \"language\") {\r\n      setLanguageFilter(filter.value);    \r\n    }    \r\n  };\r\n\r\n  \r\n  const saveLastSeach = () => {\r\n    let lastSearch : ISearch = {\r\n      name: nameFilter,\r\n      region: regionFilter,\r\n      language: languageFilter\r\n    }\r\n    const  searchHistory : ISearch[] = ls.get(\"searchHistory\", []);\r\n    searchHistory.push(lastSearch);\r\n    ls.set(\"searchHistory\", searchHistory);\r\n  }\r\n  \r\n  const renderCountryDetail = (props:any) => {\r\n    \r\n    const countryName : string = props.match.params.name;\r\n      \r\n    const findCountry : ICountry | undefined = countries?.find((country) => country.name === countryName);\r\n       \r\n    return <CountryDetail country={findCountry} />;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <main className=\"App\">\r\n     \r\n      <Header handleFilters={handleFilters}/>\r\n      \r\n      <Route exact path =\"/\">\r\n      <CountriesList countries = {countriesFiltered} setFavs={setFavs} isLoading={isLoading}/>\r\n      </Route>\r\n      <Route path=\"/countries/:name\" render= \r\n      {renderCountryDetail}>\r\n      </Route>\r\n      <Route path=\"/favcountries\">\r\n      <FavCountries favs={favs} setFavs={setFavs} />\r\n      </Route>\r\n    </main>\r\n    <Footer/>\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <Router basename=\"countryfinder\">\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}